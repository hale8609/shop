<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.mapper.DeviceMapper">
  <resultMap id="BaseResultMap" type="com.model.Device">
    <id column="id" jdbcType="INTEGER" property="id" />
    <result column="device_name" jdbcType="VARCHAR" property="deviceName" />
    <result column="device_address" jdbcType="VARCHAR" property="deviceAddress" />
    <result column="device_lng" jdbcType="VARCHAR" property="deviceLng" />
    <result column="device_lat" jdbcType="VARCHAR" property="deviceLat" />
    <result column="produce_date" jdbcType="TIMESTAMP" property="produceDate" />
    <result column="use_date" jdbcType="TIMESTAMP" property="useDate" />
    <result column="linkman" jdbcType="VARCHAR" property="linkman" />
    <result column="phone" jdbcType="VARCHAR" property="phone" />
    <result column="state" jdbcType="INTEGER" property="state" />
    <result column="admin_id" jdbcType="INTEGER" property="adminId" />
  </resultMap>
  <resultMap extends="BaseResultMap" id="ResultMapWithBLOBs" type="com.model.DeviceWithBLOBs">
    <result column="device_describe" jdbcType="LONGVARCHAR" property="deviceDescribe" />
    <result column="remarks" jdbcType="LONGVARCHAR" property="remarks" />
  </resultMap>
  <sql id="Example_Where_Clause">
    <where>
      <foreach collection="oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Update_By_Example_Where_Clause">
    <where>
      <foreach collection="example.oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Base_Column_List">
    id, device_name, device_address, device_lng, device_lat, produce_date, use_date, 
    linkman, phone, state, admin_id
  </sql>
  <sql id="Blob_Column_List">
    device_describe, remarks
  </sql>
  <select id="selectByExampleWithBLOBs" parameterType="com.model.DeviceExample" resultMap="ResultMapWithBLOBs">
    select
    <if test="distinct">
      distinct
    </if>
    <include refid="Base_Column_List" />
    ,
    <include refid="Blob_Column_List" />
    from device
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null">
      order by ${orderByClause}
    </if>
  </select>
  <select id="selectByExample" parameterType="com.model.DeviceExample" resultMap="BaseResultMap">
    select
    <if test="distinct">
      distinct
    </if>
    <include refid="Base_Column_List" />
    from device
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null">
      order by ${orderByClause}
    </if>
  </select>
  <select id="selectByPrimaryKey" parameterType="java.lang.Integer" resultMap="ResultMapWithBLOBs">
    select 
    <include refid="Base_Column_List" />
    ,
    <include refid="Blob_Column_List" />
    from device
    where id = #{id,jdbcType=INTEGER}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Integer">
    delete from device
    where id = #{id,jdbcType=INTEGER}
  </delete>
  <delete id="deleteByExample" parameterType="com.model.DeviceExample">
    delete from device
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </delete>
  <insert id="insert" parameterType="com.model.DeviceWithBLOBs">
    insert into device (id, device_name, device_address, 
      device_lng, device_lat, produce_date, 
      use_date, linkman, phone, 
      state, admin_id, device_describe, 
      remarks)
    values (#{id,jdbcType=INTEGER}, #{deviceName,jdbcType=VARCHAR}, #{deviceAddress,jdbcType=VARCHAR}, 
      #{deviceLng,jdbcType=VARCHAR}, #{deviceLat,jdbcType=VARCHAR}, #{produceDate,jdbcType=TIMESTAMP}, 
      #{useDate,jdbcType=TIMESTAMP}, #{linkman,jdbcType=VARCHAR}, #{phone,jdbcType=VARCHAR}, 
      #{state,jdbcType=INTEGER}, #{adminId,jdbcType=INTEGER}, #{deviceDescribe,jdbcType=LONGVARCHAR}, 
      #{remarks,jdbcType=LONGVARCHAR})
  </insert>
  <insert id="insertSelective" parameterType="com.model.DeviceWithBLOBs">
    insert into device
    <trim prefix="(" suffix=")" suffixOverrides=",">
      <if test="id != null">
        id,
      </if>
      <if test="deviceName != null">
        device_name,
      </if>
      <if test="deviceAddress != null">
        device_address,
      </if>
      <if test="deviceLng != null">
        device_lng,
      </if>
      <if test="deviceLat != null">
        device_lat,
      </if>
      <if test="produceDate != null">
        produce_date,
      </if>
      <if test="useDate != null">
        use_date,
      </if>
      <if test="linkman != null">
        linkman,
      </if>
      <if test="phone != null">
        phone,
      </if>
      <if test="state != null">
        state,
      </if>
      <if test="adminId != null">
        admin_id,
      </if>
      <if test="deviceDescribe != null">
        device_describe,
      </if>
      <if test="remarks != null">
        remarks,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides=",">
      <if test="id != null">
        #{id,jdbcType=INTEGER},
      </if>
      <if test="deviceName != null">
        #{deviceName,jdbcType=VARCHAR},
      </if>
      <if test="deviceAddress != null">
        #{deviceAddress,jdbcType=VARCHAR},
      </if>
      <if test="deviceLng != null">
        #{deviceLng,jdbcType=VARCHAR},
      </if>
      <if test="deviceLat != null">
        #{deviceLat,jdbcType=VARCHAR},
      </if>
      <if test="produceDate != null">
        #{produceDate,jdbcType=TIMESTAMP},
      </if>
      <if test="useDate != null">
        #{useDate,jdbcType=TIMESTAMP},
      </if>
      <if test="linkman != null">
        #{linkman,jdbcType=VARCHAR},
      </if>
      <if test="phone != null">
        #{phone,jdbcType=VARCHAR},
      </if>
      <if test="state != null">
        #{state,jdbcType=INTEGER},
      </if>
      <if test="adminId != null">
        #{adminId,jdbcType=INTEGER},
      </if>
      <if test="deviceDescribe != null">
        #{deviceDescribe,jdbcType=LONGVARCHAR},
      </if>
      <if test="remarks != null">
        #{remarks,jdbcType=LONGVARCHAR},
      </if>
    </trim>
  </insert>
  <select id="countByExample" parameterType="com.model.DeviceExample" resultType="java.lang.Long">
    select count(*) from device
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </select>
  <update id="updateByExampleSelective" parameterType="map">
    update device
    <set>
      <if test="record.id != null">
        id = #{record.id,jdbcType=INTEGER},
      </if>
      <if test="record.deviceName != null">
        device_name = #{record.deviceName,jdbcType=VARCHAR},
      </if>
      <if test="record.deviceAddress != null">
        device_address = #{record.deviceAddress,jdbcType=VARCHAR},
      </if>
      <if test="record.deviceLng != null">
        device_lng = #{record.deviceLng,jdbcType=VARCHAR},
      </if>
      <if test="record.deviceLat != null">
        device_lat = #{record.deviceLat,jdbcType=VARCHAR},
      </if>
      <if test="record.produceDate != null">
        produce_date = #{record.produceDate,jdbcType=TIMESTAMP},
      </if>
      <if test="record.useDate != null">
        use_date = #{record.useDate,jdbcType=TIMESTAMP},
      </if>
      <if test="record.linkman != null">
        linkman = #{record.linkman,jdbcType=VARCHAR},
      </if>
      <if test="record.phone != null">
        phone = #{record.phone,jdbcType=VARCHAR},
      </if>
      <if test="record.state != null">
        state = #{record.state,jdbcType=INTEGER},
      </if>
      <if test="record.adminId != null">
        admin_id = #{record.adminId,jdbcType=INTEGER},
      </if>
      <if test="record.deviceDescribe != null">
        device_describe = #{record.deviceDescribe,jdbcType=LONGVARCHAR},
      </if>
      <if test="record.remarks != null">
        remarks = #{record.remarks,jdbcType=LONGVARCHAR},
      </if>
    </set>
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByExampleWithBLOBs" parameterType="map">
    update device
    set id = #{record.id,jdbcType=INTEGER},
      device_name = #{record.deviceName,jdbcType=VARCHAR},
      device_address = #{record.deviceAddress,jdbcType=VARCHAR},
      device_lng = #{record.deviceLng,jdbcType=VARCHAR},
      device_lat = #{record.deviceLat,jdbcType=VARCHAR},
      produce_date = #{record.produceDate,jdbcType=TIMESTAMP},
      use_date = #{record.useDate,jdbcType=TIMESTAMP},
      linkman = #{record.linkman,jdbcType=VARCHAR},
      phone = #{record.phone,jdbcType=VARCHAR},
      state = #{record.state,jdbcType=INTEGER},
      admin_id = #{record.adminId,jdbcType=INTEGER},
      device_describe = #{record.deviceDescribe,jdbcType=LONGVARCHAR},
      remarks = #{record.remarks,jdbcType=LONGVARCHAR}
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByExample" parameterType="map">
    update device
    set id = #{record.id,jdbcType=INTEGER},
      device_name = #{record.deviceName,jdbcType=VARCHAR},
      device_address = #{record.deviceAddress,jdbcType=VARCHAR},
      device_lng = #{record.deviceLng,jdbcType=VARCHAR},
      device_lat = #{record.deviceLat,jdbcType=VARCHAR},
      produce_date = #{record.produceDate,jdbcType=TIMESTAMP},
      use_date = #{record.useDate,jdbcType=TIMESTAMP},
      linkman = #{record.linkman,jdbcType=VARCHAR},
      phone = #{record.phone,jdbcType=VARCHAR},
      state = #{record.state,jdbcType=INTEGER},
      admin_id = #{record.adminId,jdbcType=INTEGER}
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByPrimaryKeySelective" parameterType="com.model.DeviceWithBLOBs">
    update device
    <set>
      <if test="deviceName != null">
        device_name = #{deviceName,jdbcType=VARCHAR},
      </if>
      <if test="deviceAddress != null">
        device_address = #{deviceAddress,jdbcType=VARCHAR},
      </if>
      <if test="deviceLng != null">
        device_lng = #{deviceLng,jdbcType=VARCHAR},
      </if>
      <if test="deviceLat != null">
        device_lat = #{deviceLat,jdbcType=VARCHAR},
      </if>
      <if test="produceDate != null">
        produce_date = #{produceDate,jdbcType=TIMESTAMP},
      </if>
      <if test="useDate != null">
        use_date = #{useDate,jdbcType=TIMESTAMP},
      </if>
      <if test="linkman != null">
        linkman = #{linkman,jdbcType=VARCHAR},
      </if>
      <if test="phone != null">
        phone = #{phone,jdbcType=VARCHAR},
      </if>
      <if test="state != null">
        state = #{state,jdbcType=INTEGER},
      </if>
      <if test="adminId != null">
        admin_id = #{adminId,jdbcType=INTEGER},
      </if>
      <if test="deviceDescribe != null">
        device_describe = #{deviceDescribe,jdbcType=LONGVARCHAR},
      </if>
      <if test="remarks != null">
        remarks = #{remarks,jdbcType=LONGVARCHAR},
      </if>
    </set>
    where id = #{id,jdbcType=INTEGER}
  </update>
  <update id="updateByPrimaryKeyWithBLOBs" parameterType="com.model.DeviceWithBLOBs">
    update device
    set device_name = #{deviceName,jdbcType=VARCHAR},
      device_address = #{deviceAddress,jdbcType=VARCHAR},
      device_lng = #{deviceLng,jdbcType=VARCHAR},
      device_lat = #{deviceLat,jdbcType=VARCHAR},
      produce_date = #{produceDate,jdbcType=TIMESTAMP},
      use_date = #{useDate,jdbcType=TIMESTAMP},
      linkman = #{linkman,jdbcType=VARCHAR},
      phone = #{phone,jdbcType=VARCHAR},
      state = #{state,jdbcType=INTEGER},
      admin_id = #{adminId,jdbcType=INTEGER},
      device_describe = #{deviceDescribe,jdbcType=LONGVARCHAR},
      remarks = #{remarks,jdbcType=LONGVARCHAR}
    where id = #{id,jdbcType=INTEGER}
  </update>
  <update id="updateByPrimaryKey" parameterType="com.model.Device">
    update device
    set device_name = #{deviceName,jdbcType=VARCHAR},
      device_address = #{deviceAddress,jdbcType=VARCHAR},
      device_lng = #{deviceLng,jdbcType=VARCHAR},
      device_lat = #{deviceLat,jdbcType=VARCHAR},
      produce_date = #{produceDate,jdbcType=TIMESTAMP},
      use_date = #{useDate,jdbcType=TIMESTAMP},
      linkman = #{linkman,jdbcType=VARCHAR},
      phone = #{phone,jdbcType=VARCHAR},
      state = #{state,jdbcType=INTEGER},
      admin_id = #{adminId,jdbcType=INTEGER}
    where id = #{id,jdbcType=INTEGER}
  </update>
</mapper>